stages:
  download_data:
    cmd: python3 -m scripts.download_data
    deps:
      - scripts/download_data.py
    outs:
      - data/raw/train.csv
      - data/raw/test.csv
    desc: "Download do dataset do Kaggle"
    
  validate_data:
    cmd: python3 -m scripts.data_validation
    deps:
      - scripts/data_validation.py
      - data/raw/train.csv
    outs:
      - data/validation_results/summary.json
    desc: "Validação de qualidade dos dados"
    
  process_data:
    cmd: python3 -m scripts.process_data
    deps:
      - scripts/process_data.py
      - features/base_features.py
      - features/lag_features.py
      - features/temporal_features.py
      - features/statistical_features.py
      - features/feature_store.yaml
      - data/raw/train.csv
      - data/raw/test.csv
    outs:
      - data/processed/train_processed.parquet
      - data/processed/test_processed.parquet
      - data/processed/processing_metadata.yaml
    params:
      - features.enable_temporal_components
      - features.create_lags
      - features.lag_periods
      - features.create_rolling_stats
      - features.rolling_windows
      - features.create_statistical
    desc: "Feature engineering e processamento de dados"

  train_model:
    cmd: python3 -m scripts.train
    deps:
      - scripts/train.py
      - scripts/utils.py
      - scripts/metrics.py
      - data/processed/train_processed.parquet
      - params.yaml
    outs:
      - artifacts/models/
    metrics:
      - artifacts/metrics/cv_metrics.json:
          cache: false
      - artifacts/metrics/holdout_metrics.json:
          cache: false
    desc: "Treinamento otimizado para recursos limitados"

  evaluate_model:
    cmd: python3 -m scripts.evaluate
    deps:
      - scripts/evaluate.py
      - scripts/utils.py
      - scripts/metrics.py
      - data/processed/test_processed.parquet
      - artifacts/models/
    metrics:
      - artifacts/metrics/test_metrics.json:
          cache: false
    desc: "Avaliação em holdout/teste processado"

  backtest:
    cmd: python3 -m scripts.backtest
    deps:
      - scripts/backtest.py
      - scripts/train.py
      - scripts/utils.py
      - scripts/metrics.py
      - data/processed/train_processed.parquet
      - params.yaml
    metrics:
      - artifacts/metrics/backtest_summary.json:
          cache: false
    outs:
      - artifacts/backtests/metrics_by_split.csv
    desc: "Walk-forward/backtesting com janelas deslizantes"